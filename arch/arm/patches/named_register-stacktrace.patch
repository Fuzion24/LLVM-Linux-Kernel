Use ARM inline assembly to get the stack pointer in save_stack_trace_tsk()

The existing code uses named registers to get the value of the stack pointer.
Using inline assembly is a more portable way of doing the same thing.
This change supports being able to compile the kernel with gcc and Clang.

Signed-off-by: Mark Charlebois <charlebm@gmail.com>
Signed-off-by: Behan Webster <behanw@converseincode.com>
---

--- linux.orig/arch/arm/kernel/stacktrace.c
+++ linux/arch/arm/kernel/stacktrace.c
@@ -109,11 +109,9 @@
 		frame.pc = thread_saved_pc(tsk);
 #endif
 	} else {
-		register unsigned long current_sp asm ("sp");
-
 		data.no_sched_functions = 0;
 		frame.fp = (unsigned long)__builtin_frame_address(0);
-		frame.sp = current_sp;
+		asm ("mov %0, r13" : "=r" (frame.sp));
 		frame.lr = (unsigned long)__builtin_return_address(0);
 		frame.pc = (unsigned long)save_stack_trace_tsk;
 	}
