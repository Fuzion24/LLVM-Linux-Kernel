Fix for prfm error on AArch64

The following error is generated with the mainline clang compiler
for AArch64:

/llvmlinux/targets/vexpress64/src/linux/arch/arm64/include/asm/processor.h:149:15: 
error: invalid operand in inline asm: 'prfm pldl1keep, ${0:a}
'

Per comments by Tim Northover on the LLVM Bug database:

"It's rather unclear how it's better than "prfm pstl1keep, [%0]" though. 
Not all instructions can make use of any offset, so wouldn't we have to be 
conservative and always map it to "[xN]"?

Signed-off-by: Mark Charlebois <charlebm@gmail.com>
---

diff --git a/arch/arm64/include/asm/processor.h b/arch/arm64/include/asm/processor.h
index 34de2a8..44366cc 100644
--- a/arch/arm64/include/asm/processor.h
+++ b/arch/arm64/include/asm/processor.h
@@ -146,13 +146,13 @@ extern struct task_struct *cpu_switch_to(struct task_struct *prev,
 #define ARCH_HAS_PREFETCH
 static inline void prefetch(const void *ptr)
 {
-	asm volatile("prfm pldl1keep, %a0\n" : : "p" (ptr));
+	asm volatile("prfm pldl1keep, [%x0]\n" : : "p" (ptr));
 }
 
 #define ARCH_HAS_PREFETCHW
 static inline void prefetchw(const void *ptr)
 {
-	asm volatile("prfm pstl1keep, %a0\n" : : "p" (ptr));
+	asm volatile("prfm pstl1keep, [%x0]\n" : : "p" (ptr));
 }
 
 #define ARCH_HAS_SPINLOCK_PREFETCH
