From 60f1767080791e4aef700dfc11aa200a8c67cf9a Mon Sep 17 00:00:00 2001
From: Toma Tabacu <toma.tabacu@imgtec.com>
Date: Mon, 22 Jun 2015 13:21:19 +0100
Subject: [PATCH] DO-NOT-UPSTREAM MIPS: LLVMLinux: Silence .set noat warnings.

The following warnings are emitted:
arch/mips/include/asm/timex.h:95:10: warning: used $at without ".set noat" [-Winline-asm]
                return read_c0_random();
                       ^
arch/mips/include/asm/mipsregs.h:1037:26: note: expanded from macro 'read_c0_random'
                                ^
arch/mips/include/asm/mipsregs.h:847:4: note: expanded from macro '__read_32bit_c0_register'
                        "mfc0\t%0, " #source "\n\t"                     \
                        ^
<inline asm>:1:11: note: instantiated into assembly here
        mfc0    $2, $1
                    ^
At the moment, it is unclear whether this is a problem with the IAS or with the
inline assembly code generation.

Temporarily fix these warnings by adding .set noat around the problematic
instructions.

Signed-off-by: Toma Tabacu <toma.tabacu@imgtec.com>
---
 arch/mips/include/asm/mipsregs.h | 12 ++++++++++++
 1 file changed, 12 insertions(+)

diff --git a/arch/mips/include/asm/mipsregs.h b/arch/mips/include/asm/mipsregs.h
index 764e275..5865c0f 100644
--- a/arch/mips/include/asm/mipsregs.h
+++ b/arch/mips/include/asm/mipsregs.h
@@ -904,12 +904,18 @@ do {								\
 ({ int __res;								\
 	if (sel == 0)							\
 		__asm__ __volatile__(					\
+			".set\tpush\n\t"				\
+			".set\tnoat\n\t"				\
 			"mfc0\t%0, " #source "\n\t"			\
+			".set\tpop\n\t"					\
 			: "=r" (__res));				\
 	else								\
 		__asm__ __volatile__(					\
 			".set\tmips32\n\t"				\
+			".set\tpush\n\t"				\
+			".set\tnoat\n\t"				\
 			"mfc0\t%0, " #source ", " #sel "\n\t"		\
+			".set\tpop\n\t"					\
 			".set\tmips0\n\t"				\
 			: "=r" (__res));				\
 	__res;								\
@@ -938,12 +944,18 @@ do {								\
 do {									\
 	if (sel == 0)							\
 		__asm__ __volatile__(					\
+			".set\tpush\n\t"				\
+			".set\tnoat\n\t"				\
 			"mtc0\t%z0, " #register "\n\t"			\
+			".set\tpop\n\t"					\
 			: : "Jr" ((unsigned int)(value)));		\
 	else								\
 		__asm__ __volatile__(					\
+			".set\tpush\n\t"				\
+			".set\tnoat\n\t"				\
 			".set\tmips32\n\t"				\
 			"mtc0\t%z0, " #register ", " #sel "\n\t"	\
+			".set\tpop\n\t"					\
 			".set\tmips0"					\
 			: : "Jr" ((unsigned int)(value)));		\
 } while (0)
-- 
1.9.1

