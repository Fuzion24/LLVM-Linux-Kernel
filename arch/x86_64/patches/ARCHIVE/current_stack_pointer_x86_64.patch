From c45c0ee94122f4fda219df2d54db19c0796d697a Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Jan-Simon=20M=C3=B6ller?= <dl9pf@gmx.de>
Date: Wed, 14 Nov 2012 12:55:28 +0100
Subject: [PATCH 24/39] x86: LLVMLinux: Reimplement current_stack_pointer
 without register usage.
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

The current kernel code uses a named register to get the stack pointer which is
only supported in gcc. For clang an alternative is to use a macro to get the
current stack pointer using ASM (which is less efficient than a named
resgiter). Long term the LLVMLinux project is hoping to introduce a new
__builtin_stack_pointer() which will be added to both LLVM and gcc.

Author: Behan Webster <behanw@converseincode.com>
Signed-off-by: Behan Webster <behanw@converseincode.com>
Based on:  PaX Team <pageexec@freemail.hu>
Signed-off-by: Jan-Simon MÃ¶ller <dl9pf@gmx.de>
---
 arch/x86/include/asm/thread_info.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- linux.orig/arch/x86/include/asm/thread_info.h
+++ linux/arch/x86/include/asm/thread_info.h
@@ -168,7 +168,21 @@
 
 
 /* how to get the current stack pointer from C */
+#if defined(CONFIG_BUILTIN_STACK_POINTER)
+/* compiler has __builtin_stack_pointer support already */
+
+#elif defined(__clang__)
+#define current_stack_pointer ({ \
+	unsigned long esp; \
+	asm("mov %%esp, %0" : "=r"(esp)); \
+	esp; \
+})
+#define current_stack_pointer __builtin_stack_pointer()
+
+#else /* gcc */
 register unsigned long current_stack_pointer asm("esp") __used;
+#define __builtin_stack_pointer() current_stack_pointer
+#endif
 
 /* how to get the thread information struct from C */
 static inline struct thread_info *current_thread_info(void)
