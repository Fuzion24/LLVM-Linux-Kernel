From e5a806f844d0c837e7c5c64452c322ced6c89752 Mon Sep 17 00:00:00 2001
From: Mark Charlebois <charlebm@gmail.com>
Date: Thu, 14 Aug 2014 08:12:08 -0500
Subject: [PATCH] kbuild: LLVMLinux: Optionally include flags not supported by clang

Clang doesn't support -fno-delete-null-pointer-checks or
 -fno-inline-functions-called-once and they cannot be
diabled by cc-option because cc-option doesnt work for
flags, ony for warnings.

Signed-off-by: Mark Charlebois <charlebm@gmail.com>
Signed-off-by: Behan Webster <behanw@converseincode.com>
---
 Makefile | 10 +++++++---
 1 file changed, 7 insertions(+), 3 deletions(-)

diff --git a/Makefile b/Makefile
index 3d842a7..0fab28b 100644
--- a/Makefile
+++ b/Makefile
@@ -308,7 +308,7 @@ HOSTCXXFLAGS = -O2
 
 ifeq ($(shell $(HOSTCC) -v 2>&1 | grep -c "clang version"), 1)
 HOSTCFLAGS  += -Wno-unused-value -Wno-unused-parameter \
-		-Wno-missing-field-initializers -fno-delete-null-pointer-checks
+		-Wno-missing-field-initializers
 endif
 
 # Decide whether to build built-in, modular, or both.
@@ -624,7 +624,9 @@ all: vmlinux
 
 include $(srctree)/arch/$(SRCARCH)/Makefile
 
-KBUILD_CFLAGS	+= $(call cc-option,-fno-delete-null-pointer-checks,)
+ifneq ($(COMPILER),clang)
+KBUILD_CFLAGS	+= -fno-delete-null-pointer-checks
+endif
 
 ifdef CONFIG_CC_OPTIMIZE_FOR_SIZE
 KBUILD_CFLAGS	+= -Os $(call cc-disable-warning,maybe-uninitialized,)
@@ -754,7 +756,9 @@ endif
 
 # We trigger additional mismatches with less inlining
 ifdef CONFIG_DEBUG_SECTION_MISMATCH
-KBUILD_CFLAGS += $(call cc-option, -fno-inline-functions-called-once)
+ifneq ($(COMPILER),clang)
+KBUILD_CFLAGS += -fno-inline-functions-called-once
+endif
 endif
 
 # arch Makefile may override CC so keep this after arch Makefile is included
-- 
1.9.1

