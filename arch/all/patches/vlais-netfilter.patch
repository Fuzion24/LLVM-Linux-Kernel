From c725bf3167248d3e01c110be05e498e2d6f816f2 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Jan-Simon=20M=C3=B6ller?= <dl9pf@gmx.de>
Date: Mon, 2 Jul 2012 13:24:40 +0200
Subject: Fix VLAIS usage in net/netfilter/xt_repldata.h

The use of variable length arrays in structures (VLAIS) in the Linux Kernel
code precludes the use of compilers which don't implement VLAIS (for instance
the Clang compiler).

Patch from series at
http://lists.cs.uiuc.edu/pipermail/llvm-commits/Week-of-Mon-20120507/142707.html
by PaX Team.

Signed-off-by: =?UTF-8?q?Jan-Simon=20M=C3=B6ller?= <dl9pf@gmx.de>
Signed-off-by: Behan Webster <behanw@converseincode.com>
---
 net/netfilter/xt_repldata.h |   36 ++++++++++++++++++++++--------------
 1 files changed, 22 insertions(+), 14 deletions(-)

diff --git a/net/netfilter/xt_repldata.h b/net/netfilter/xt_repldata.h
index 6efe4e5..d0a3cb5 100644
--- a/net/netfilter/xt_repldata.h
+++ b/net/netfilter/xt_repldata.h
@@ -9,26 +9,34 @@
 	unsigned int hook_mask = info->valid_hooks; \
 	unsigned int nhooks = hweight32(hook_mask); \
 	unsigned int bytes = 0, hooknum = 0, i = 0; \
-	struct { \
-		struct type##_replace repl; \
-		struct type##_standard entries[nhooks]; \
-		struct type##_error term; \
-	} *tbl = kzalloc(sizeof(*tbl), GFP_KERNEL); \
+	char *tbl = kzalloc(sizeof(struct type##_replace) + \
+			    __alignof__(struct type##_standard) + \
+			    sizeof(struct type##_standard) * nhooks + \
+			    __alignof__(struct type##_error) + \
+			    sizeof(struct type##_error), GFP_KERNEL); \
+	struct type##_replace *repl; \
+	struct type##_standard *entries; \
+	struct type##_error *term; \
 	if (tbl == NULL) \
 		return NULL; \
-	strncpy(tbl->repl.name, info->name, sizeof(tbl->repl.name)); \
-	tbl->term = (struct type##_error)typ2##_ERROR_INIT;  \
-	tbl->repl.valid_hooks = hook_mask; \
-	tbl->repl.num_entries = nhooks + 1; \
-	tbl->repl.size = nhooks * sizeof(struct type##_standard) + \
+	repl = (struct type##_replace *)tbl; \
+	entries = (struct type##_standard *)(tbl + sizeof(struct type##_replace) + __alignof__(struct type##_standard) - 1); \
+	entries = (struct type##_standard *)((unsigned long)entries & ~(__alignof__(struct type##_standard) - 1)); \
+	term = (struct type##_error *)(entries + nhooks); \
+	term = (struct type##_error *)((unsigned long)term + __alignof__(struct type##_error) - 1); \
+	term = (struct type##_error *)((unsigned long)term & ~(__alignof__(struct type##_error) - 1)); \
+	strncpy(repl->name, info->name, sizeof(repl->name)); \
+	*term = (struct type##_error)typ2##_ERROR_INIT;  \
+	repl->valid_hooks = hook_mask; \
+	repl->num_entries = nhooks + 1; \
+	repl->size = nhooks * sizeof(struct type##_standard) + \
 	                 sizeof(struct type##_error); \
 	for (; hook_mask != 0; hook_mask >>= 1, ++hooknum) { \
 		if (!(hook_mask & 1)) \
 			continue; \
-		tbl->repl.hook_entry[hooknum] = bytes; \
-		tbl->repl.underflow[hooknum]  = bytes; \
-		tbl->entries[i++] = (struct type##_standard) \
-			typ2##_STANDARD_INIT(NF_ACCEPT); \
+		repl->hook_entry[hooknum] = bytes; \
+		repl->underflow[hooknum]  = bytes; \
+		entries[i++] = (struct type##_standard) typ2##_STANDARD_INIT(NF_ACCEPT); \
 		bytes += sizeof(struct type##_standard); \
 	} \
 	tbl; \
-- 
1.7.3.4

