diff --git a/include/linux/dma-mapping.h b/include/linux/dma-mapping.h
index e13117c..35df364 100644
--- a/include/linux/dma-mapping.h
+++ b/include/linux/dma-mapping.h
@@ -126,7 +126,7 @@ static inline void *dma_zalloc_coherent(struct device *dev, size_t size,
 {
 	void *ret = dma_alloc_coherent(dev, size, dma_handle, flag);
 	if (ret)
-		memset(ret, 0, size);
+		(void)memset(ret, 0, size);
 	return ret;
 }

diff --git a/include/linux/kref.h b/include/linux/kref.h
index 9c07dce..516b7a3 100644
--- a/include/linux/kref.h
+++ b/include/linux/kref.h
@@ -38,7 +38,7 @@ static inline void kref_init(struct kref *kref)
  */
 static inline void kref_get(struct kref *kref)
 {
-	WARN_ON(!atomic_read(&kref->refcount));
+	(void)WARN_ON(!atomic_read(&kref->refcount));
 	atomic_inc(&kref->refcount);
 }
 
@@ -63,7 +63,7 @@ static inline void kref_get(struct kref *kref)
 static inline int kref_sub(struct kref *kref, unsigned int count,
 	     void (*release)(struct kref *kref))
 {
-	WARN_ON(release == NULL);
+	(void)WARN_ON(release == NULL);
 
 	if (atomic_sub_and_test((int) count, &kref->refcount)) {
 		release(kref);
diff --git a/include/net/scm.h b/include/net/scm.h
index d456f4c..3fd7dfc 100644
--- a/include/net/scm.h
+++ b/include/net/scm.h
@@ -73,7 +73,7 @@ static __inline__ void scm_destroy(struct scm_cookie *scm)
 static __inline__ int scm_send(struct socket *sock, struct msghdr *msg,
 			       struct scm_cookie *scm)
 {
-	memset(scm, 0, sizeof(*scm));
+	(void)memset(scm, 0, sizeof(*scm));
 	unix_get_peersec_dgram(sock, scm);
 	if (msg->msg_controllen <= 0)
 		return 0;
diff --git a/drivers/net/ethernet/smsc/smc91x.c b/drivers/net/ethernet/smsc/smc91x.c
index 64ad3ed..459835a 100644
--- a/drivers/net/ethernet/smsc/smc91x.c
+++ b/drivers/net/ethernet/smsc/smc91x.c
@@ -2406,7 +2406,7 @@ static struct dev_pm_ops smc_drv_pm_ops = {
 	.resume		= smc_drv_resume,
 };
 
-static struct platform_driver smc_driver = {
+static struct platform_driver smc_driver __refdata = {
 	.probe		= smc_drv_probe,
 	.remove		= __devexit_p(smc_drv_remove),
 	.driver		= {
diff --git a/net/ipv4/ip_output.c b/net/ipv4/ip_output.c
index ff302bd..78492e1 100644
--- a/net/ipv4/ip_output.c
+++ b/net/ipv4/ip_output.c
@@ -121,7 +121,7 @@ static int ip_dev_loopback_xmit(struct sk_buff *newskb)
 	__skb_pull(newskb, skb_network_offset(newskb));
 	newskb->pkt_type = PACKET_LOOPBACK;
 	newskb->ip_summed = CHECKSUM_UNNECESSARY;
-	WARN_ON(!skb_dst(newskb));
+	(void)WARN_ON(!skb_dst(newskb));
 	skb_dst_force(newskb);
 	netif_rx_ni(newskb);
 	return 0;
diff --git a/net/ipv4/route.c b/net/ipv4/route.c
index bcacf54..b8bd44f 100644
--- a/net/ipv4/route.c
+++ b/net/ipv4/route.c
@@ -849,7 +849,7 @@ static void rt_check_expire(void)
 	expires_ljiffies = jiffies;
 	mult = ((u64)delta) << rt_hash_log;
 	if (ip_rt_gc_timeout > 1)
-		do_div(mult, ip_rt_gc_timeout);
+		(void)do_div(mult, ip_rt_gc_timeout);
 	goal = (unsigned int)mult;
 	if (goal > rt_hash_mask)
 		goal = rt_hash_mask + 1;
diff --git a/include/net/sock.h b/include/net/sock.h
index bb972d2..54d7904 100644
--- a/include/net/sock.h
+++ b/include/net/sock.h
@@ -496,7 +496,7 @@ static __inline__ int sk_nulls_del_node_init_rcu(struct sock *sk)
 
 	if (rc) {
 		/* paranoid for a while -acme */
-		WARN_ON(atomic_read(&sk->sk_refcnt) == 1);
+		(void)WARN_ON(atomic_read(&sk->sk_refcnt) == 1);
 		__sock_put(sk);
 	}
 	return rc;
