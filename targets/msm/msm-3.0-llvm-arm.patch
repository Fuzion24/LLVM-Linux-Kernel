diff --git a/arch/arm/include/asm/atomic.h b/arch/arm/include/asm/atomic.h
index 86976d0..4d0e9e1 100644
--- a/arch/arm/include/asm/atomic.h
+++ b/arch/arm/include/asm/atomic.h
@@ -243,19 +243,22 @@ typedef struct {
 
 static inline u64 atomic64_read(atomic64_t *v)
 {
-	u64 result;
+	u64 result = 0;
 
+#if 0
 	__asm__ __volatile__("@ atomic64_read\n"
 "	ldrexd	%0, %H0, [%1]"
 	: "=&r" (result)
 	: "r" (&v->counter), "Qo" (v->counter)
 	);
+#endif
 
 	return result;
 }
 
 static inline void atomic64_set(atomic64_t *v, u64 i)
 {
+#if 0
 	u64 tmp;
 
 	__asm__ __volatile__("@ atomic64_set\n"
@@ -266,10 +269,12 @@ static inline void atomic64_set(atomic64_t *v, u64 i)
 	: "=&r" (tmp), "=Qo" (v->counter)
 	: "r" (&v->counter), "r" (i)
 	: "cc");
+#endif
 }
 
 static inline void atomic64_add(u64 i, atomic64_t *v)
 {
+#if 0
 	u64 result;
 	unsigned long tmp;
 
@@ -283,11 +288,13 @@ static inline void atomic64_add(u64 i, atomic64_t *v)
 	: "=&r" (result), "=&r" (tmp), "+Qo" (v->counter)
 	: "r" (&v->counter), "r" (i)
 	: "cc");
+#endif
 }
 
 static inline u64 atomic64_add_return(u64 i, atomic64_t *v)
 {
-	u64 result;
+	u64 result = 0;
+#if 0
 	unsigned long tmp;
 
 	smp_mb();
@@ -304,12 +311,14 @@ static inline u64 atomic64_add_return(u64 i, atomic64_t *v)
 	: "cc");
 
 	smp_mb();
+#endif
 
 	return result;
 }
 
 static inline void atomic64_sub(u64 i, atomic64_t *v)
 {
+#if 0
 	u64 result;
 	unsigned long tmp;
 
@@ -323,11 +332,13 @@ static inline void atomic64_sub(u64 i, atomic64_t *v)
 	: "=&r" (result), "=&r" (tmp), "+Qo" (v->counter)
 	: "r" (&v->counter), "r" (i)
 	: "cc");
+#endif
 }
 
 static inline u64 atomic64_sub_return(u64 i, atomic64_t *v)
 {
-	u64 result;
+	u64 result = 0;
+#if 0
 	unsigned long tmp;
 
 	smp_mb();
@@ -344,13 +355,15 @@ static inline u64 atomic64_sub_return(u64 i, atomic64_t *v)
 	: "cc");
 
 	smp_mb();
+#endif
 
 	return result;
 }
 
 static inline u64 atomic64_cmpxchg(atomic64_t *ptr, u64 old, u64 new)
 {
-	u64 oldval;
+	u64 oldval = 0;
+#if 0
 	unsigned long res;
 
 	smp_mb();
@@ -368,13 +381,15 @@ static inline u64 atomic64_cmpxchg(atomic64_t *ptr, u64 old, u64 new)
 	} while (res);
 
 	smp_mb();
+#endif
 
 	return oldval;
 }
 
 static inline u64 atomic64_xchg(atomic64_t *ptr, u64 new)
 {
-	u64 result;
+	u64 result = 0;
+#if 0
 	unsigned long tmp;
 
 	smp_mb();
@@ -389,13 +404,15 @@ static inline u64 atomic64_xchg(atomic64_t *ptr, u64 new)
 	: "cc");
 
 	smp_mb();
+#endif
 
 	return result;
 }
 
 static inline u64 atomic64_dec_if_positive(atomic64_t *v)
 {
-	u64 result;
+	u64 result = 0;
+#if 0
 	unsigned long tmp;
 
 	smp_mb();
@@ -415,15 +432,17 @@ static inline u64 atomic64_dec_if_positive(atomic64_t *v)
 	: "cc");
 
 	smp_mb();
+#endif
 
 	return result;
 }
 
 static inline int atomic64_add_unless(atomic64_t *v, u64 a, u64 u)
 {
+	int ret = 1;
+#if 0
 	u64 val;
 	unsigned long tmp;
-	int ret = 1;
 
 	smp_mb();
 
@@ -445,6 +464,7 @@ static inline int atomic64_add_unless(atomic64_t *v, u64 a, u64 u)
 
 	if (ret)
 		smp_mb();
+#endif
 
 	return ret;
 }
diff --git a/arch/arm/kernel/pmu.c b/arch/arm/kernel/pmu.c
index a4688e8..119488c 100644
--- a/arch/arm/kernel/pmu.c
+++ b/arch/arm/kernel/pmu.c
@@ -45,7 +45,7 @@ static int __devinit pmu_device_probe(struct platform_device *pdev)
 	return 0;
 }
 
-static struct platform_driver cpu_pmu_driver = {
+static struct platform_driver cpu_pmu_driver __devinitdata= {
 	.driver		= {
 		.name	= "cpu-arm-pmu",
 	},
diff --git a/arch/arm/mach-msm/board-msm8x60.c b/arch/arm/mach-msm/board-msm8x60.c
index ba7e658..1248188 100644
--- a/arch/arm/mach-msm/board-msm8x60.c
+++ b/arch/arm/mach-msm/board-msm8x60.c
@@ -7134,7 +7134,7 @@ static struct i2c_registry msm8x60_i2c_devices[] __initdata = {
 };
 #endif /* CONFIG_I2C */
 
-static void fixup_i2c_configs(void)
+static void __init fixup_i2c_configs(void)
 {
 #ifdef CONFIG_I2C
 #if defined(CONFIG_GPIO_SX150X) || defined(CONFIG_GPIO_SX150X_MODULE)
@@ -7152,7 +7152,7 @@ static void fixup_i2c_configs(void)
 #endif
 }
 
-static void register_i2c_devices(void)
+static void __init register_i2c_devices(void)
 {
 #ifdef CONFIG_I2C
 	u8 mach_mask = 0;
diff --git a/arch/arm/mach-msm/cpufreq.c b/arch/arm/mach-msm/cpufreq.c
index 2477221..8bcd2f8 100644
--- a/arch/arm/mach-msm/cpufreq.c
+++ b/arch/arm/mach-msm/cpufreq.c
@@ -285,7 +285,7 @@ static struct freq_attr *msm_freq_attr[] = {
 	NULL,
 };
 
-static struct cpufreq_driver msm_cpufreq_driver = {
+static struct cpufreq_driver msm_cpufreq_driver __initdata = {
 	/* lps calculations are handled here. */
 	.flags		= CPUFREQ_STICKY | CPUFREQ_CONST_LOOPS,
 	.init		= msm_cpufreq_init,
diff --git a/arch/arm/mach-msm/footswitch-8x60.c b/arch/arm/mach-msm/footswitch-8x60.c
index 98447fa..ff2710d 100644
--- a/arch/arm/mach-msm/footswitch-8x60.c
+++ b/arch/arm/mach-msm/footswitch-8x60.c
@@ -561,7 +561,7 @@ static int __devexit footswitch_remove(struct platform_device *pdev)
 	return 0;
 }
 
-static struct platform_driver footswitch_driver = {
+static struct platform_driver footswitch_driver __refdata = {
 	.probe		= footswitch_probe,
 	.remove		= __devexit_p(footswitch_remove),
 	.driver		= {
diff --git a/arch/arm/mach-msm/footswitch-pcom.c b/arch/arm/mach-msm/footswitch-pcom.c
index 8eec807..ed7f0c6 100644
--- a/arch/arm/mach-msm/footswitch-pcom.c
+++ b/arch/arm/mach-msm/footswitch-pcom.c
@@ -291,7 +291,7 @@ static int __devexit footswitch_remove(struct platform_device *pdev)
 	return 0;
 }
 
-static struct platform_driver footswitch_driver = {
+static struct platform_driver footswitch_driver __refdata = {
 	.probe		= footswitch_probe,
 	.remove		= __devexit_p(footswitch_remove),
 	.driver		= {
diff --git a/arch/arm/mach-msm/msm_dsps.c b/arch/arm/mach-msm/msm_dsps.c
index efb2bf6..057665b 100644
--- a/arch/arm/mach-msm/msm_dsps.c
+++ b/arch/arm/mach-msm/msm_dsps.c
@@ -39,7 +39,7 @@
 #include <mach/subsystem_restart.h>
 #include <mach/subsystem_notif.h>
 
-#include <timer.h>
+#include "timer.h"
 
 #define DRV_NAME	"msm_dsps"
 #define DRV_VERSION	"3.02"
diff --git a/arch/arm/mach-msm/pil-modem.c b/arch/arm/mach-msm/pil-modem.c
index 5aa3834..a8344c3 100644
--- a/arch/arm/mach-msm/pil-modem.c
+++ b/arch/arm/mach-msm/pil-modem.c
@@ -319,7 +319,7 @@ static int __devexit pil_modem_driver_exit(struct platform_device *pdev)
 	return 0;
 }
 
-static struct platform_driver pil_modem_driver = {
+static struct platform_driver pil_modem_driver __refdata = {
 	.probe = pil_modem_driver_probe,
 	.remove = __devexit_p(pil_modem_driver_exit),
 	.driver = {
diff --git a/arch/arm/mach-msm/pil-q6v3.c b/arch/arm/mach-msm/pil-q6v3.c
index 7354d93..ffb9351 100644
--- a/arch/arm/mach-msm/pil-q6v3.c
+++ b/arch/arm/mach-msm/pil-q6v3.c
@@ -274,7 +274,7 @@ static int __devexit pil_q6v3_driver_exit(struct platform_device *pdev)
 	return 0;
 }
 
-static struct platform_driver pil_q6v3_driver = {
+static struct platform_driver pil_q6v3_driver __refdata = {
 	.probe = pil_q6v3_driver_probe,
 	.remove = __devexit_p(pil_q6v3_driver_exit),
 	.driver = {
diff --git a/arch/arm/mach-msm/pil-tzapps.c b/arch/arm/mach-msm/pil-tzapps.c
index 90ac1d9..63f5d5a 100644
--- a/arch/arm/mach-msm/pil-tzapps.c
+++ b/arch/arm/mach-msm/pil-tzapps.c
@@ -71,7 +71,7 @@ static int __devexit pil_tzapps_driver_exit(struct platform_device *pdev)
 	return 0;
 }
 
-static struct platform_driver pil_tzapps_driver = {
+static struct platform_driver pil_tzapps_driver __refdata = {
 	.probe = pil_tzapps_driver_probe,
 	.remove = __devexit_p(pil_tzapps_driver_exit),
 	.driver = {
diff --git a/arch/arm/mach-msm/rpm-regulator.c b/arch/arm/mach-msm/rpm-regulator.c
index 5c2bb8e..065ebfc 100644
--- a/arch/arm/mach-msm/rpm-regulator.c
+++ b/arch/arm/mach-msm/rpm-regulator.c
@@ -1393,7 +1393,7 @@ static int __devexit rpm_vreg_remove(struct platform_device *pdev)
 	return 0;
 }
 
-static struct platform_driver rpm_vreg_driver = {
+static struct platform_driver rpm_vreg_driver __refdata = {
 	.probe = rpm_vreg_probe,
 	.remove = __devexit_p(rpm_vreg_remove),
 	.driver = {
diff --git a/arch/arm/mach-msm/rpm.c b/arch/arm/mach-msm/rpm.c
index ef2956a..3fc36fb 100644
--- a/arch/arm/mach-msm/rpm.c
+++ b/arch/arm/mach-msm/rpm.c
@@ -819,7 +819,7 @@ static int __devexit msm_rpm_remove(struct platform_device *pdev)
 	return 0;
 }
 
-static struct platform_driver msm_rpm_platform_driver = {
+static struct platform_driver msm_rpm_platform_driver __refdata = {
 	.probe = msm_rpm_probe,
 	.remove = __devexit_p(msm_rpm_remove),
 	.driver = {
diff --git a/arch/arm/mach-msm/rpm_log.c b/arch/arm/mach-msm/rpm_log.c
index 3ed55da..df43a1a 100644
--- a/arch/arm/mach-msm/rpm_log.c
+++ b/arch/arm/mach-msm/rpm_log.c
@@ -335,7 +335,7 @@ static int __devexit msm_rpm_log_remove(struct platform_device *pdev)
 	return 0;
 }
 
-static struct platform_driver msm_rpm_log_driver = {
+static struct platform_driver msm_rpm_log_driver __refdata = {
 	.probe		= msm_rpm_log_probe,
 	.remove		= __devexit_p(msm_rpm_log_remove),
 	.driver		= {
diff --git a/arch/arm/mach-msm/rpm_stats.c b/arch/arm/mach-msm/rpm_stats.c
index a831bd5..f5d8888 100644
--- a/arch/arm/mach-msm/rpm_stats.c
+++ b/arch/arm/mach-msm/rpm_stats.c
@@ -222,7 +222,7 @@ static int __devexit msm_rpmstats_remove(struct platform_device *pdev)
 	platform_set_drvdata(pdev, NULL);
 	return 0;
 }
-static struct platform_driver msm_rpmstats_driver = {
+static struct platform_driver msm_rpmstats_driver __refdata = {
 	.probe	= msm_rpmstats_probe,
 	.remove = __devexit_p(msm_rpmstats_remove),
 	.driver = {
diff --git a/arch/arm/mach-msm/saw-regulator.c b/arch/arm/mach-msm/saw-regulator.c
index b11b1fa..edb7ca4 100644
--- a/arch/arm/mach-msm/saw-regulator.c
+++ b/arch/arm/mach-msm/saw-regulator.c
@@ -208,7 +208,7 @@ static int __devexit saw_remove(struct platform_device *pdev)
 	return 0;
 }
 
-static struct platform_driver saw_driver = {
+static struct platform_driver saw_driver __refdata = {
 	.probe = saw_probe,
 	.remove = __devexit_p(saw_remove),
 	.driver = {
diff --git a/arch/arm/mach-msm/smd.c b/arch/arm/mach-msm/smd.c
index e794801..d6c60bd 100644
--- a/arch/arm/mach-msm/smd.c
+++ b/arch/arm/mach-msm/smd.c
@@ -2580,7 +2580,7 @@ static __init int modem_restart_late_init(void)
 }
 late_initcall(modem_restart_late_init);
 
-static struct platform_driver msm_smd_driver = {
+static struct platform_driver msm_smd_driver __initdata = {
 	.probe = msm_smd_probe,
 	.driver = {
 		.name = MODULE_NAME,
