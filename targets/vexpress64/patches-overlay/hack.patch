Clang is broken upstream for the inline assembly used in
prefetch() and prefetchw()

This is a hack to allow the kernel to compile so other errors can be fixed

A LLVM Bug was filed: http://llvm.org/bugs/show_bug.cgi?id=19962

This patch can be removed when the bug has been fixed.

DO NOT UPSTREAM THIS PATCH

diff --git a/arch/arm64/include/asm/processor.h b/arch/arm64/include/asm/processor.h
index 45b20cd..8c33b39 100644
--- a/arch/arm64/include/asm/processor.h
+++ b/arch/arm64/include/asm/processor.h
@@ -145,13 +145,13 @@ extern struct task_struct *cpu_switch_to(struct task_struct *prev,
 #define ARCH_HAS_PREFETCH
 static inline void prefetch(const void *ptr)
 {
-	asm volatile("prfm pldl1keep, %a0\n" : : "p" (ptr));
+	//asm volatile("prfm pldl1keep, %a0\n" : : "p" (ptr));
 }
 
 #define ARCH_HAS_PREFETCHW
 static inline void prefetchw(const void *ptr)
 {
-	asm volatile("prfm pstl1keep, %a0\n" : : "p" (ptr));
+	//asm volatile("prfm pstl1keep, %a0\n" : : "p" (ptr));
 }
 
 #define ARCH_HAS_SPINLOCK_PREFETCH
