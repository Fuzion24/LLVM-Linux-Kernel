From cf30f90477b8d7f94458c9f2667a55f0ca818f3c Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Jan-Simon=20M=C3=B6ller?= <dl9pf@gmx.de>
Date: Mon, 2 Jul 2012 13:25:48 +0200
Subject: [PATCH 09/48] Add noinline_for_stack to net/sctp/socket.c  . Patch from series at http://lists.cs.uiuc.edu/pipermail/llvm-commits/Week-of-Mon-20120507/142707.html by PaX Team.

/*
 * Rather then using noinline to prevent stack consumption, use
 * noinline_for_stack instead.  For documentaiton reasons.
 */
---
 net/sctp/socket.c |   24 ++++++++++++------------
 1 files changed, 12 insertions(+), 12 deletions(-)

diff --git a/net/sctp/socket.c b/net/sctp/socket.c
index 408ebd0..c09e984 100644
--- a/net/sctp/socket.c
+++ b/net/sctp/socket.c
@@ -2441,7 +2441,7 @@ static int sctp_apply_peer_addr_params(struct sctp_paddrparams *params,
 	return 0;
 }
 
-static int sctp_setsockopt_peer_addr_params(struct sock *sk,
+static noinline_for_stack int sctp_setsockopt_peer_addr_params(struct sock *sk,
 					    char __user *optval,
 					    unsigned int optlen)
 {
@@ -2706,7 +2706,7 @@ static int sctp_setsockopt_initmsg(struct sock *sk, char __user *optval, unsigne
  *   sinfo_timetolive.  The user must provide the sinfo_assoc_id field in
  *   to this call if the caller is using the UDP model.
  */
-static int sctp_setsockopt_default_send_param(struct sock *sk,
+static noinline_for_stack int sctp_setsockopt_default_send_param(struct sock *sk,
 					      char __user *optval,
 					      unsigned int optlen)
 {
@@ -2746,7 +2746,7 @@ static int sctp_setsockopt_default_send_param(struct sock *sk,
  * the association primary.  The enclosed address must be one of the
  * association peer's addresses.
  */
-static int sctp_setsockopt_primary_addr(struct sock *sk, char __user *optval,
+static noinline_for_stack int sctp_setsockopt_primary_addr(struct sock *sk, char __user *optval,
 					unsigned int optlen)
 {
 	struct sctp_prim prim;
@@ -3022,7 +3022,7 @@ static int sctp_setsockopt_maxseg(struct sock *sk, char __user *optval, unsigned
  *   locally bound addresses. The following structure is used to make a
  *   set primary request:
  */
-static int sctp_setsockopt_peer_primary_addr(struct sock *sk, char __user *optval,
+static noinline_for_stack int sctp_setsockopt_peer_primary_addr(struct sock *sk, char __user *optval,
 					     unsigned int optlen)
 {
 	struct sctp_sock	*sp;
@@ -3973,7 +3973,7 @@ SCTP_STATIC void sctp_shutdown(struct sock *sk, int how)
  * number of unacked data chunks, and number of data chunks pending
  * receipt.  This information is read-only.
  */
-static int sctp_getsockopt_sctp_status(struct sock *sk, int len,
+static noinline_for_stack int sctp_getsockopt_sctp_status(struct sock *sk, int len,
 				       char __user *optval,
 				       int __user *optlen)
 {
@@ -4053,7 +4053,7 @@ out:
  * window, and retransmission timer values.  This information is
  * read-only.
  */
-static int sctp_getsockopt_peer_addr_info(struct sock *sk, int len,
+static noinline_for_stack int sctp_getsockopt_peer_addr_info(struct sock *sk, int len,
 					  char __user *optval,
 					  int __user *optlen)
 {
@@ -4346,7 +4346,7 @@ out:
  *                     SPP_SACKDELAY_ENABLE, setting both will have undefined
  *                     results.
  */
-static int sctp_getsockopt_peer_addr_params(struct sock *sk, int len,
+static noinline_for_stack int sctp_getsockopt_peer_addr_params(struct sock *sk, int len,
 					    char __user *optval, int __user *optlen)
 {
 	struct sctp_paddrparams  params;
@@ -4539,7 +4539,7 @@ static int sctp_getsockopt_initmsg(struct sock *sk, int len, char __user *optval
 }
 
 
-static int sctp_getsockopt_peer_addrs(struct sock *sk, int len,
+static noinline_for_stack int sctp_getsockopt_peer_addrs(struct sock *sk, int len,
 				      char __user *optval, int __user *optlen)
 {
 	struct sctp_association *asoc;
@@ -4634,7 +4634,7 @@ static int sctp_copy_laddrs(struct sock *sk, __u16 port, void *to,
 }
 
 
-static int sctp_getsockopt_local_addrs(struct sock *sk, int len,
+static noinline_for_stack int sctp_getsockopt_local_addrs(struct sock *sk, int len,
 				       char __user *optval, int __user *optlen)
 {
 	struct sctp_bind_addr *bp;
@@ -4739,7 +4739,7 @@ out:
  * the association primary.  The enclosed address must be one of the
  * association peer's addresses.
  */
-static int sctp_getsockopt_primary_addr(struct sock *sk, int len,
+static noinline_for_stack int sctp_getsockopt_primary_addr(struct sock *sk, int len,
 					char __user *optval, int __user *optlen)
 {
 	struct sctp_prim prim;
@@ -4820,7 +4820,7 @@ static int sctp_getsockopt_adaptation_layer(struct sock *sk, int len,
  *
  *   For getsockopt, it get the default sctp_sndrcvinfo structure.
  */
-static int sctp_getsockopt_default_send_param(struct sock *sk,
+static noinline_for_stack int sctp_getsockopt_default_send_param(struct sock *sk,
 					int len, char __user *optval,
 					int __user *optlen)
 {
@@ -4954,7 +4954,7 @@ static int sctp_getsockopt_rtoinfo(struct sock *sk, int len,
  * See [SCTP] for more information.
  *
  */
-static int sctp_getsockopt_associnfo(struct sock *sk, int len,
+static noinline_for_stack int sctp_getsockopt_associnfo(struct sock *sk, int len,
 				     char __user *optval,
 				     int __user *optlen)
 {
-- 
1.7.3.4

