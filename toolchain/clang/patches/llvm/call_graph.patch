From 4ad1177422ef1f940fa4a2416ce1e84836276fe0 Mon Sep 17 00:00:00 2001
From: Harsh Vardhan Dwivedi <hdwivedi@codeaurora.org>
Date: Mon, 14 Jul 2014 23:46:07 -0600
Subject: [PATCH] Add option to print call graph

Pass "-mllvm -print-call-graph" to clang to invoke.

This will generate dot files for every file compiled.

There will be an extra Node0x12345678 type node generated
by LLVM that can be removed by a post processing script.

Author: Harsh Vardhan Dwivedi <hdwivedi@codeaurora.org>
Signed-off-by: David Peixotto <dpeixott@codeaurora.org>
Signed-off-by: Harsh Vardhan Dwivedi <hdwivedi@codeaurora.org>
Signed-off-by: Mark Charlebois <charlebm@gmail.com>
---
 lib/Transforms/IPO/PassManagerBuilder.cpp  |    9 +++++++++
 include/llvm/Analysis/DOTGraphTraitsPass.h |    8 +++++++-
 2 files changed, 16 insertions(+), 1 deletion(-)

--- llvm.orig/lib/Transforms/IPO/PassManagerBuilder.cpp
+++ llvm/lib/Transforms/IPO/PassManagerBuilder.cpp
@@ -16,6 +16,7 @@
 #include "llvm/Transforms/IPO/PassManagerBuilder.h"
 #include "llvm-c/Transforms/PassManagerBuilder.h"
 #include "llvm/ADT/SmallVector.h"
+#include "llvm/Analysis/CallPrinter.h"
 #include "llvm/Analysis/Passes.h"
 #include "llvm/IR/DataLayout.h"
 #include "llvm/IR/Verifier.h"
@@ -56,6 +57,10 @@
 RunLoopRerolling("reroll-loops", cl::Hidden,
                  cl::desc("Run the loop rerolling pass"));
 
+static cl::opt<bool>
+PrintCallGraph("print-call-graph", cl::Hidden, cl::ZeroOrMore,
+			   cl::desc("Print the call graph"));
+
 static cl::opt<bool> RunLoadCombine("combine-loads", cl::init(false),
                                     cl::Hidden,
                                     cl::desc("Run the load combining pass"));
@@ -145,6 +150,10 @@
 }
 
 void PassManagerBuilder::populateModulePassManager(PassManagerBase &MPM) {
+
+	if (PrintCallGraph)
+		MPM.add(createCallGraphPrinterPass());
+
   // If all optimizations are disabled, just run the always-inline pass.
   if (OptLevel == 0) {
     if (Inliner) {
--- llvm.orig/include/llvm/Analysis/DOTGraphTraitsPass.h
+++ llvm/include/llvm/Analysis/DOTGraphTraitsPass.h
@@ -16,6 +16,8 @@
 
 #include "llvm/Analysis/CFGPrinter.h"
 #include "llvm/Pass.h"
+#include "llvm/IR/Module.h"
+#include <sstream>
 #include "llvm/Support/FileSystem.h"
 
 namespace llvm {
@@ -128,7 +130,8 @@ public:
 
   bool runOnModule(Module &M) override {
     GraphT Graph = AnalysisGraphTraitsT::getGraph(&getAnalysis<AnalysisT>());
-    std::string Filename = Name + ".dot";
+    std::string ModuleFileName = M.getModuleIdentifier();
+    std::string Filename = ModuleFileName + "_.dot";
     std::error_code EC;
 
     errs() << "Writing '" << Filename << "'...";
